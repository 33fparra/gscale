---
import MainLayout from "@/layouts/MainLayout.astro";
import Navbar from "@/components/Navbar.astro";
---

<MainLayout title="Escala de notas" />	
	<Navbar/>
  <!-- Section -->
  <section class="p-4 mt-20">
    <h2 class="text-lg font-bold text-center mb-4">Calculadora de Notas</h2>
    <div class="flex justify-center">

      <!-- Estructura para pantallas menores a 769px -->
      <div class="block md:hidden">
        <div class="w-full flex pb-1">
          <div class="flex  w-1/2 pr-1">
            <label for="nMax1" class="text-xs sm:text-sm font-medium w-1/2">Nota máxima:</label>
            <input type="number" id="nMax1" placeholder="10, 100..."
              class="w-1/2 rounded-s border-gray-150 shadow-sm text-xs sm:text-sm">
          </div>
          <div class="flex  w-1/2 pf-1">
            <label for="nMin1" class="text-xs sm:text-sm font-medium w-1/2">Nota mínima:</label>
            <input type="number" id="nMin1" placeholder="0 ..."
              class="w-1/2 rounded-s border-gray-150 shadow-sm text-xs sm:text-sm">
          </div>
        </div>
        <div class="w-full flex pb-1">
          <div class="flex  w-1/2 pr-1">
            <label for="nApr1" class="text-xs sm:text-sm font-medium w-1/2">Nota probación:</label>
            <input type="number" id="nApr1" placeholder="50, 40, 60..."
              class="w-1/2 rounded-s border-gray-150 shadow-sm text-xs sm:text-sm">
          </div>
          <div class="flex  w-1/2 pf-1">
            <label for="e1" class="text-xs sm:text-sm font-medium w-1/2">Exigencia:</label>
            <input type="number" id="e1" placeholder="60%, 70%..."
              class="w-1/2 rounded-s border-gray-150 shadow-sm text-xs sm:text-sm">
          </div>
        </div>
        <div class="w-full flex pb-1">
          <div class="flex  w-1/2 pr-1">
            <label for="pMax1" class="text-xs sm:text-sm font-medium w-1/2">Puntaje máximo:</label>
            <input type="number" id="pMax1" placeholder=" 100, 30..."
              class="w-1/2 rounded-s border-gray-150 shadow-sm text-xs sm:text-sm">
          </div>
          <div class="flex  w-1/2 pf-1">
            <label for="incremento1" class="text-xs sm:text-sm font-medium w-1/2">Incremento:</label>
            <input type="number" id="incremento1" placeholder="1, 0.5..."
              class="w-1/2 rounded-s border-gray-150 shadow-sm text-xs sm:text-sm">
          </div>
        </div>
        <div class="w-3/5 mx-auto flex  pt-1">
          <label for="orden1" class="text-xs sm:text-sm font-medium mr-2">Orden:</label>
          <select id="orden1" class="mt-1 w-full rounded-s border-gray-150 shadow-sm text-xs sm:text-sm">
            <option value="ascendente">Ascendente</option>
            <option value="descendente">Descendente</option>
          </select>
        </div>
        <div class="w-full mx-auto flex justify-center pt-2">
          <button onclick="calcularNotasChicas()"
            class="w-3/5 py-2 px-4 bg-purple-500 text-white rounded text-xs sm:text-sm">Calcular</button>
        </div>
      </div>

      <!-- Fin pantallas chicas -->

      <div class="md:w-1/5 lg:w-1/5 xl:w-1/5">
        <!-- No se aplica la clase sm:hidden -->
        <div class="hidden md:block">
          <div class="flex w-full pb-1">
            <div class="flex w-full pr-1">
              <label for="nMax" class="text-xs sm:text-sm font-medium w-1/2">Nota máxima:</label>
              <input type="number" id="nMax" placeholder="10, 100..."
                class="w-1/2 rounded-s border-gray-150 shadow-sm text-xs sm:text-sm">
            </div>
          </div>

          <div class="w-full flex pb-1">
            <div class="flex w-full pr-1">
              <label for="nMin" class="text-xs sm:text-sm font-medium w-1/2">Nota mínima:</label>
              <input type="number" id="nMin" placeholder="0 ..."
                class="w-1/2 rounded-s border-gray-150 shadow-sm text-xs sm:text-sm">
            </div>
          </div>

          <div class="w-full flex pb-1">
            <div class="flex w-full pr-1">
              <label for="nApr" class="text-xs sm:text-sm font-medium w-1/2">Nota probación:</label>
              <input type="number" id="nApr" placeholder="50, 40, 60..."
                class="w-1/2 rounded-s border-gray-150 shadow-sm text-xs sm:text-sm">
            </div>
          </div>

          <div class="w-full flex pb-1">
            <div class="flex w-full pr-1">
              <label for="e" class="text-xs sm:text-sm font-medium w-1/2">Exigencia:</label>
              <input type="number" id="e" placeholder="60%, 70%..."
                class="w-1/2 rounded-s border-gray-150 shadow-sm text-xs sm:text-sm">
            </div>
          </div>

          <div class="w-full flex pb-1">
            <div class="flex w-full pr-1">
              <label for="pMax" class="text-xs sm:text-sm font-medium w-1/2">Puntaje máximo:</label>
              <input type="number" id="pMax" placeholder=" 100, 30..."
                class="w-1/2 rounded-s border-gray-150 shadow-sm text-xs sm:text-sm">
            </div>
          </div>

          <div class="w-full flex pb-1">
            <div class="flex w-full pr-1">
              <label for="incremento" class="text-xs sm:text-sm font-medium w-1/2">Incremento:</label>
              <input type="number" id="incremento" placeholder="1, 0.5..."
                class="w-1/2 rounded-s border-gray-150 shadow-sm text-xs sm:text-sm">
            </div>
          </div>

          <div class="w-full flex pb-1">
            <div class="w-3/5 mx-auto flex pt-1">
              <label for="orden" class="text-xs sm:text-sm font-medium mr-2">Orden:</label>
              <select id="orden" class="mt-1 w-full rounded-s border-gray-150 shadow-sm text-xs sm:text-sm">
                <option value="ascendente">Ascendente</option>
                <option value="descendente">Descendente</option>
              </select>
            </div>
          </div>
          <div class="w-full mx-auto flex justify-center pt-2">
            <button onclick="calcularNotas()"
              class="w-3/5 py-2 px-4 bg-purple-500 text-white rounded text-xs sm:text-sm">Calcular</button>
          </div>



        </div>
      </div>

      <!-- Espacio para los resultados -->
      <div class="md:w-4/5 lg:w-4/5 xl:w-4/5">
        <div id="resultados" class="p-4">
          <!-- Las tablas generadas por JS irán aquí -->
        </div>
      </div>
    </div>
    <!-- resultadoschicos -->
    <div id="resultadoschicos" class="">
      <!-- Las tablas generadas por JS irán aquí -->
    </div>

  </section>

  <script>
    //tamano sobre md 768px o menos
    document.addEventListener('DOMContentLoaded',function calcularNotas() {

     const nMax = parseFloat((document.getElementById('nMax') as HTMLInputElement).value);
       const nMin = parseFloat((document.getElementById('nMin') as HTMLInputElement).value);
       const nApr = parseFloat((document.getElementById('nApr') as HTMLInputElement).value);
       const e = parseFloat((document.getElementById('e') as HTMLInputElement).value);
       const pMax = parseFloat((document.getElementById('pMax') as HTMLInputElement).value);
       const incremento = parseFloat((document.getElementById('incremento') as HTMLInputElement).value);
       const orden = (document.getElementById('orden') as HTMLSelectElement).value;

      if (isNaN(nMax) || isNaN(nMin) || isNaN(nApr) || isNaN(e) || isNaN(pMax) || isNaN(incremento)) {
        alert('Por favor, rellena todos los campos con valores numéricos válidos.');
        return;
      }

      let notas = [];
      for (let p = 0; p <= pMax; p += incremento) {
        let n;
        if (p < e * pMax) {
          n = ((nApr - nMin) / (e * pMax)) * p + nMin;
        } else {
          n = ((nMax - nApr) / (pMax * (1 - e))) * (p - e * pMax) + nApr;
        }
        notas.push({puntaje: p, nota: Math.round(n * 10) / 10});
      }

      if (orden === 'descendente') {
        notas.reverse();
      }
      const resultadosElement = document.getElementById('resultados');
      resultadosElement.innerHTML = ''; // Limpiar resultados anteriores
      resultadosElement.className = 'flex flex-wrap justify-center'; // Ajusta aquí según necesites
      const resultadosPorTabla = 10; // Cantidad de resultados por tabla

      notas.forEach((nota, index) => {
        if (index % resultadosPorTabla === 0) { // Inicio de un nuevo grupo
          // Crea el contenedor de la tabla con clases para manejar el ancho y margen
          const tablaContenedor = document.createElement('div');
          tablaContenedor.className = 'xs:w-1/4 sm:w-1/5 md:w-1/8 lg:w-1/10 xl:w-1/12 flex justify-center'; // Ajusta el ancho por fila aquí
          const tablaActual = document.createElement('div');
          tablaActual.className = 'xs:w-1/4 sm:w-1/5 md:w-1/8 lg:w-1/10 xl:w-1/12 overflow-hidden rounded-lg bg-white py-2 px-3'; // Clases de Tailwind
          // Crear thead para cada nueva tabla
          const thead = document.createElement('thead');
          thead.className = 'text-xs sm:text-xs md:text-xs lg:text-xs bg-purple-400 text-white rounded-tl-lg rounded-tr-lg pb-1'; // Clase de Tailwind para el fondo y color del texto del encabezado
          const trHead = document.createElement('tr');
          ['Ptje.', 'Nota'].forEach(text => {
            const th = document.createElement('th');
            th.textContent = text;
            th.className = 'px-3 py-1 border text-xs sm:text-xs md:text-xs lg:text-xs text-center'; // Clases de Tailwind para padding y bordes
            trHead.appendChild(th);
          });
          thead.appendChild(trHead);
          tablaActual.appendChild(thead);
          const tbody = document.createElement('tbody');
          tablaActual.appendChild(tbody);
          resultadosElement.appendChild(tablaActual);
        }
        // Crear y añadir filas a la última tbody añadida al DOM
        const tbody = resultadosElement.lastChild.lastChild;
        const tr = document.createElement('tr');
        tr.className = 'border-b px-2 py-2 justify-center'; // Clase de Tailwind para el borde inferior
        const tdPuntaje = document.createElement('td');
        tdPuntaje.textContent = nota.puntaje;
        tdPuntaje.className = 'px-2 py-1 border text-xs sm:text-xs md:text-xs lg:text-xs justify-center text-center'; // Clases de Tailwind para bordes y padding
        const tdNota = document.createElement('td');
        tdNota.textContent = nota.nota;
        tdNota.className = 'px-2 py-1 border text-xs sm:text-xs md:text-xs lg:text-xs justify-center text-center'; // Clases de Tailwind para bordes y padding
        tr.appendChild(tdPuntaje);
        tr.appendChild(tdNota);
        tbody.appendChild(tr);
      });
    })
    /************************************************************************/
    //tamano sobre md 769px o mas
    document.addEventListener('DOMContentLoaded',function calcularNotasChicas() {

     const nMax1 = parseFloat((document.getElementById('nMax1') as HTMLInputElement).value);
       const nMin1 = parseFloat((document.getElementById('nMin1') as HTMLInputElement).value);
       const nApr1 = parseFloat((document.getElementById('nApr1') as HTMLInputElement).value);
       const e1 = parseFloat((document.getElementById('e1') as HTMLInputElement).value);
       const pMax1 = parseFloat((document.getElementById('pMax1') as HTMLInputElement).value);
       const incremento1 = parseFloat((document.getElementById('incremento1') as HTMLInputElement).value);
       const orden1 = (document.getElementById('orden') as HTMLSelectElement).value;
      if (isNaN(nMax1) || isNaN(nMin1) || isNaN(nApr1) || isNaN(e1) || isNaN(pMax1) || isNaN(incremento1)) {
        alert('Por favor, rellena todos los campos con valores numéricos válidos.');
        return;
      }

      let notas = [];
      for (let p = 0; p <= pMax1; p += incremento1) {
        let n;
        if (p < e1 * pMax1) {
          n = ((nApr1 - nMin1) / (e1 * pMax1)) * p + nMin1;
        } else {
          n = ((nMax1 - nApr1) / (pMax1 * (1 - e1))) * (p - e1 * pMax1) + nApr1;
        }
        notas.push({puntaje: p, nota: Math.round(n * 10) / 10});
      }

      if (orden1 === 'descendente') {
        notas.reverse();
      }

      const resultadoschicosElement = document.getElementById('resultadoschicos');
      resultadoschicosElement.innerHTML = ''; // Limpiar resultados anteriores
      resultadoschicosElement.className = 'flex flex-wrap justify-center'; // Ajusta aquí según necesites
      const resultadosPorTabla1 = 10; // Cantidad de resultados por tabla
      notas.forEach((nota, index) => {
        if (index % resultadosPorTabla1 === 0) { // Inicio de un nuevo grupo
          // Crea el contenedor de la tabla con clases para manejar el ancho y margen
          const tablaContenedor1 = document.createElement('div');
          tablaContenedor1.className = 'xs:w-1/3 sm:w-1/4 md:w-1/6 flex justify-center'; // Ajusta el anchopor fila aquí
          const tablaActual1 = document.createElement('div');
          tablaActual1.className = 'xs:w-1/3 sm:w-1/4 md:w-1/6 overflow-hidden rounded-lg bg-white py-2 px-1'; // Clases de Tailwind
          // Crear thead para cada nueva tabla
          const thead1 = document.createElement('thead');
          thead1.className = 'text-xs sm:text-xs md:text-xs lg:text-xs bg-purple-400 text-white rounded-tl-lg rounded-tr-lg pb-1'; // Clase de Tailwind para el fondo y color del texto del encabezado
          const trHead1 = document.createElement('tr');
          ['Ptje.', 'Nota'].forEach(text => {
            const th1 = document.createElement('th');
            th1.textContent = text;
            th1.className = 'px-3 py-1 border text-xs sm:text-xs md:text-xs lg:text-xs text-center'; // Clases de Tailwind para padding y bordes
            trHead1.appendChild(th1);
          });
          thead1.appendChild(trHead1);
          tablaActual1.appendChild(thead1);
          const tbody1 = document.createElement('tbody');
          tablaActual1.appendChild(tbody1);
          resultadoschicosElement.appendChild(tablaActual1);
          console.log("obtengo los datos", + thead1, + "", + trHead1)
        }
        // Crear y añadir filas a la última tbody añadida al DOM
        const tbody1 = resultadoschicosElement.lastChild;
        const tr1 = document.createElement('tr');
        tr1.className = 'border-b px-2 py-2 justify-center'; // Clase de Tailwind para el borde inferior
        const tdPuntaje1 = document.createElement('td');
        tdPuntaje1.textContent = nota.puntaje;
        tdPuntaje1.className = 'px-2 py-1 border text-xs sm:text-xs md:text-xs lg:text-xs justify-center text-center'; // Clases de Tailwind para bordes y padding
        const tdNota1 = document.createElement('td');
        tdNota1.textContent = nota.nota;
        tdNota1.className = 'px-2 py-1 border text-xs sm:text-xs md:text-xs lg:text-xs justify-center text-center'; // Clases de Tailwind para bordes y padding
        tr1.appendChild(tdPuntaje1);
        tr1.appendChild(tdNota1);
        tbody1.appendChild(tr1);
      });
    })
  </script>